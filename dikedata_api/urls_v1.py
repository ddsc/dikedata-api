# (c) Nelen & Schuurmans.  MIT licensed, see LICENSE.rst.
from dikedata_api import views
from django.conf.urls.defaults import patterns
from django.conf.urls.defaults import url


urlpatterns = patterns(
    '',
    url(r'^users/?$',
        views.UserList.as_view(),
        name='user-list'),
    url(r'^users/(?P<pk>[0-9]+)/?$',
        views.UserDetail.as_view(),
        name='user-detail'),
    url(r'^groups/?$',
        views.UserGroupList.as_view(),
        name='usergroup-list'),
    url(r'^groups/(?P<pk>[0-9]+)/?$',
        views.UserGroupDetail.as_view(),
        name='usergroup-detail'),
    url(r'^permissionmappers/?$',
        views.PermissionMapperList.as_view(),
        name='permissionmapper-list'),
    url(r'^permissionmappers/(?P<pk>[0-9]+)/?$',
        views.PermissionMapperDetail.as_view(),
        name='permissionmapper-detail'),
    url(r'^roles/?$',
        views.RoleList.as_view(),
        name='role-list'),
    url(r'^roles/(?P<pk>[0-9]+)/?$',
        views.RoleDetail.as_view(),
        name='role-detail'),
    url(r'^datasets/?$',
        views.DataSetList.as_view(),
        name='dataset-list'),
    url(r'^datasets/(?P<pk>[^/]+)/?$',
        views.DataSetDetail.as_view(),
        name='dataset-detail'),
    url(r'^dataowner/?$',
        views.DataOwnerList.as_view(),
        name='dataowner-list'),
    url(r'^dataowner/(?P<pk>[^/]+)/?$',
        views.DataOwnerDetail.as_view(),
        name='dataowner-detail'),
    url(r'^locations/?$',
        views.LocationList.as_view(),
        name='location-list'),
    url(r'^locations/(?P<uuid>[^/]+)/?$',
        views.LocationDetail.as_view(),
        name='location-detail'),
    url(r'^timeseries/?$',
        views.TimeseriesList.as_view(),
        name='timeseries-list'),
    url(r'^timeseries/(?P<uuid>[^/]+)/?$',
        views.TimeseriesDetail.as_view(),
        name='timeseries-detail'),
    url(r'^events/?$',
        views.MultiEventList.as_view(),
        name='multi-event-list'),
    url(r'^events/(?P<uuid>[^/]+)/?$',
        views.EventList.as_view(),
        name='event-list'),
    url(r'^events/(?P<uuid>[^/]+)/(?P<dt>[^/]+)/?$',
        views.EventDetail.as_view(),
        name='event-detail'),
    url(r'^logicalgroups/?$',
        views.LogicalGroupList.as_view(),
        name='logicalgroup-list'),
    url(r'^logicalgroups/(?P<pk>[^/]+)/?$',
        views.LogicalGroupDetail.as_view(),
        name='logicalgroup-detail'),
    url(r'^alarms/?$',
        views.AlarmActiveList.as_view(),
        name='alarm_active-list'),
    url(r'^alarms/(?P<pk>[^/]+)/?$',
        views.AlarmActiveDetail.as_view(),
        name='alarm_active-detail'),
    url(r'^alarmsettings/?$',
        views.AlarmSettingList.as_view(),
        name='alarm-list'),
    url(r'^alarmsettings/(?P<pk>[^/]+)/?$',
        views.AlarmSettingDetail.as_view(),
        name='alarm-detail'),
    url(r'^alarmitems/(?P<pk>[^/]+)/?$',
        views.AlarmItemDetail.as_view(),
        name='alarm_item-detail'),
    url(r'^status/(?P<pk>[^/]+)/?$',
        views.StatusCacheDetail.as_view(),
        name='statuscache-detail'),
    url(r'^status/?$',
        views.StatusCacheList.as_view(),
        name='statuscache-list'),
    url(r'^sources/?$',
        views.SourceList.as_view(),
        name='source-list'),
    url(r'^sources/(?P<uuid>[^/]+)/?$',
        views.SourceDetail.as_view(),
        name='source-detail'),
    url(r'^manufacturer/?$',
        views.ManufacturerList.as_view(),
        name='manufacturer-list'),
    #aquo tables for selection
    url(r'^parameters/?$',
        views.Parameter.as_view(),
        name='parameter-list'),
    url(r'^compartments/?$',
        views.Compartment.as_view(),
        name='compartment-list'),
    url(r'^measuringdevices/?$',
        views.MeasuringDevice.as_view(),
        name='measuring_device-list'),
    url(r'^measuringmethods/?$',
        views.MeasuringMethod.as_view(),
        name='measuring_method-list'),
    url(r'^processingmethods/?$',
        views.ProcessingMethod.as_view(),
        name='processing_method-list'),
    url(r'^referenceframes/?$',
        views.ReferenceFrame.as_view(),
        name='reference_frame-list'),
    url(r'^units/?$',
        views.Unit.as_view(),
        name='unit-list'),
    url(r'^summary/?$',
        views.Summary.as_view(),
        name='summary'),


)
